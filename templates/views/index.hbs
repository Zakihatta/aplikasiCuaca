<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Aplikasi Cek Cuaca</title>
  <link rel="icon" href="/img/logo.png" />
  <link rel="stylesheet" href="/css/style.css" />

  <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,700;1,400;1,700;1,900&family=Silkscreen&display=swap"
      rel="stylesheet"
    />
</head>
<body>
  <div class="container">
    {{> header}}

    <div class="main-content">
      <h1>Cek Cuaca Terkini</h1>
      <p>Masukkan lokasi untuk menemukan informasi cuaca secara cepat dan akurat!</p>
      <form class="weather-form" id="weather-form">
        <input type="text" id="location" placeholder="Masukkan lokasi" required />
        <button type="submit">Cek Cuaca</button>
      </form>

      <div class="weather-info">
        <p id="pesan-1"></p>
        <p id="pesan-2"></p>
      </div>
    </div>

    {{> footer}}
  </div>

  <script>
    document.getElementById("weather-form").addEventListener("submit", (e) => {
      e.preventDefault();
      const location = document.getElementById("location").value;
  
      // Memastikan lokasi tidak kosong
      if (!location) {
        alert("Silakan masukkan lokasi");
        return;
      }
  
      // Menampilkan pesan loading
      document.getElementById("pesan-1").textContent = "Sedang mencari lokasi...";
      document.getElementById("pesan-2").textContent = ""; // Kosongkan pesan kedua
  
      // Memanggil endpoint /infoCuaca untuk mendapatkan data cuaca
      fetch(`/infoCuaca?address=${encodeURIComponent(location)}`)
        .then(response => {
          if (!response.ok) {
            throw new Error("Network response was not ok " + response.statusText);
          }
          return response.json();
        })
        .then(data => {
          if (data.error) {
            document.getElementById("pesan-1").textContent = data.error;
            document.getElementById("pesan-2").textContent = "";
          } else {
            const weatherDescription = data.prediksiCuaca.split(":")[1].split(".")[0].trim();
            updateBackground(weatherDescription);
  
            document.getElementById("pesan-1").textContent = data.lokasi;
            document.getElementById("pesan-2").textContent = data.prediksiCuaca;
          }
        })
        .catch(error => {
          console.error("Fetch error:", error);
          document.getElementById("pesan-1").textContent = "Terjadi kesalahan saat mengambil data cuaca.";
          document.getElementById("pesan-2").textContent = ""; // Kosongkan pesan kedua
        });
    });
  
    // Fungsi untuk memperbarui background sesuai deskripsi cuaca
    function updateBackground(weatherDescription) {
      const body = document.body;
      
      switch (weatherDescription.toLowerCase()) {
        case "sunny":
          body.style.backgroundImage = "url('img/sunny.jpg')";
          break;
        case "rain":
          body.style.backgroundImage = "url('img/rainy.jpg')";
          break;
        case "partly cloudy":
          body.style.backgroundImage = "url('img/partly_cloudy.jpg')";
          break;
        case "snowy":
          body.style.backgroundImage = "url('img/snowy.jpg')";
          break;
        case "overcast":
          body.style.backgroundImage = "url('img/overcast.jpg')";
          break;
        case "clear":
          body.style.backgroundImage = "url('img/clear.jpg')";
          break;
        default:
          body.style.backgroundImage = "url('/img/default.jpg')";
      }
      body.style.backgroundSize = "cover";
    }
  </script>
  
</body>
</html>
